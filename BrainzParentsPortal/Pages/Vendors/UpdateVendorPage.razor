@page "/UpdateVendor/{VendorID}"
@attribute [Authorize(Roles = "Administrator")]

@using System.ComponentModel.DataAnnotations
@using BrainzParentsPortal.Helpers;
@using BrainzParentsPortal.Integration.PortalDb;
@using Paytec.Integration.Shopify
@using Paytec.Integration.Shopify.Models;
@using Paytec.Integration.Shopify.Services

@inject ShopifySettings ShopifySettings
@inject PortalDbConnectionSettings PortalDbConnectionSettings
@inject CustomAuthenticationStateProvider CustomAuthenticationStateProvider
@inject NavigationManager NavManager
@inject IDialogService DialogService
@inject IConfiguration Configuration


<MudText Typo="Typo.h5">Update a vendor</MudText>
<MudProgressLinear Color="Color.Primary" Indeterminate="IsProgress" Class="my-7" />

<MudGrid>
    <MudItem xs="12" sm="7">

        <MudForm Model="@model" @ref="form" @bind-IsValid="@success" @bind-Errors="@Errors">
            <MudCard>
                <MudCardContent>
                    <MudTextField @bind-Value="model.VendorCode" For="@(() => model.VendorCode)"
                                  Label="Vendor Code" HelperText="Input Vendor code" ReadOnly />
                    <MudTextField @bind-Value="model.VendorName" For="@(() => model.VendorName)"
                                  Label="Vendor Name" HelperText="Input Vendor name" />
                    <MudTextField @bind-Value="model.Phone" For="@(() => model.Phone)"
                                  Label="Phone" HelperText="Input phone" />
                    <MudTextField @bind-Value="model.Email" For="@(() => model.Email)"
                                  Label="Email" HelperText="Input Email" />
                    <MudTextField @bind-Value="model.ContactPerson" For="@(() => model.ContactPerson)"
                                  Label="Contact Person" HelperText="Input Contact person" />
                    <MudTextField @bind-Value="model.VendorCommission" For="@(() => model.VendorCommission)"
                                  Label="Vendor Commission" HelperText="Input vendor commission" />
                    <MudTextField @bind-Value="model.ParentCommission" For="@(() => model.ParentCommission)"
                                  Label="Parent Commission" HelperText="Input parent commission" />
                    <MudTextField @bind-Value="model.Memo" For="@(() => model.Memo)"
                                  Label="Memo" HelperText="Input memo" />

                </MudCardContent>
                <MudCardActions>
                    <MudSpacer/>
                    <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary" Class="ml-auto mr-2" OnClick="@(async(e) => await OnCancel())">Cancel</MudButton>
                    <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async(e) => await OnUpdateVendor())">Update</MudButton>
                </MudCardActions>
            </MudCard>
            <MudCard>
                <MudCardContent>

                    @if (@model.ImagePathFile != "")
                    {
                        <MudImage Src="@model.ImagePathFile" Height="100" Width="200" ObjectFit="ObjectFit.Contain" />
                    }


                    @*                @if (SchoolImageFiles != null)
                    {
                    <MudList>
                    @foreach (var file in SchoolImageFiles)
                    {
                    <MudListItem Icon="@Icons.Material.Filled.AttachFile">
                    @file.Name <code>@file.Size bytes</code>
                    </MudListItem>
                    }
                    </MudList>
                    }*@
                </MudCardContent>
                <MudCardActions>
                    <MudSpacer />

                    <MudFileUpload T="IBrowserFile" OnFilesChanged="LoadFiles" Accept=".png, .jpg" MaximumFileCount="10">
                        <ButtonTemplate>
                            <MudButton HtmlTag="label" Class="ml-auto"
                                       Variant="MudBlazor.Variant.Filled" Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.CloudUpload"
                                       @* for="@context" *@>
                                Update school image
                            </MudButton>
                        </ButtonTemplate>
                    </MudFileUpload>
                </MudCardActions>

            </MudCard>

        </MudForm>

    </MudItem>
    <MudItem>
        <MudPaper Class="pa-4 mud-height-full">
            <MudText Typo="Typo.subtitle2">@($"Errors ({Errors.Length})")</MudText>
                @foreach (var error in Errors)
            {
                <MudText Color="@Color.Error">@error</MudText>
            }
        </MudPaper>
    </MudItem>
</MudGrid>








